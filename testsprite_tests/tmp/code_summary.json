{
  "tech_stack": [
    "JavaScript",
    "React",
    "Node.js",
    "Express.js",
    "MongoDB",
    "Mongoose",
    "Tailwind CSS",
    "Vite",
    "JWT",
    "bcryptjs",
    "nodemailer",
    "multer",
    "chart.js",
    "react-router-dom"
  ],
  "features": [
    {
      "name": "User Authentication",
      "description": "Complete user authentication system with registration, login, password reset via OTP, and email verification",
      "files": [
        "server/index.js",
        "server/model/register.js",
        "client/src/auth/login.jsx",
        "client/src/auth/register.jsx",
        "client/src/auth/resetpassword.jsx",
        "client/src/auth/otpverify.jsx",
        "client/src/auth/emailverification.jsx",
        "client/src/context/AuthContext.jsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "User Authentication API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/register": {
            "post": {
              "summary": "Register a new user",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "fullName": {"type": "string"},
                        "email": {"type": "string"},
                        "password": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/login": {
            "post": {
              "summary": "User login",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string"},
                        "password": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/verify-email": {
            "post": {
              "summary": "Send password reset OTP",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/verify-otp": {
            "post": {
              "summary": "Verify password reset OTP",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string"},
                        "otp": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/reset-password": {
            "post": {
              "summary": "Reset password with OTP",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "otp": {"type": "string"},
                        "newPassword": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Transaction Management",
      "description": "Complete CRUD operations for financial transactions with export functionality",
      "files": [
        "server/routes/transaction.js",
        "server/model/transaction.js",
        "server/controller/transactionController.js",
        "server/controller/transactionExport.js",
        "client/src/Components/transactions/transaction.jsx",
        "client/src/Components/transactions/AddTransactionModal.jsx",
        "client/src/Components/transactions/TransactionList.jsx",
        "client/src/Components/transactions/recenttransactions.jsx",
        "client/src/services/transactionService.js"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Transaction Management API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/transactions": {
            "get": {
              "summary": "Get all transactions for user",
              "security": [{"bearerAuth": []}]
            },
            "post": {
              "summary": "Create a new transaction",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "amount": {"type": "number"},
                        "category": {"type": "string"},
                        "description": {"type": "string"},
                        "date": {"type": "string", "format": "date"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/transactions/{id}": {
            "get": {
              "summary": "Get specific transaction",
              "security": [{"bearerAuth": []}]
            },
            "patch": {
              "summary": "Update transaction",
              "security": [{"bearerAuth": []}]
            },
            "delete": {
              "summary": "Delete transaction",
              "security": [{"bearerAuth": []}]
            }
          },
          "/api/transactions/export": {
            "get": {
              "summary": "Export transactions report",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {
                  "name": "format",
                  "in": "query",
                  "schema": {"type": "string", "enum": ["csv", "pdf", "excel"]}
                }
              ]
            }
          }
        }
      }
    },
    {
      "name": "Budget Management",
      "description": "Budget creation, tracking, and management with category-based budgets and total budget limits",
      "files": [
        "server/routes/budgetRoutes.js",
        "server/model/budget.js",
        "server/model/totalBudget.js",
        "server/controller/budgetController.js",
        "server/services/budgetService.js",
        "client/src/Components/budget/budgets.jsx",
        "client/src/Components/budget/budgetsummery.jsx",
        "client/src/Components/budget/categorybudget.jsx",
        "client/src/Components/budget/editbudgetmodal.jsx",
        "client/src/Components/budget/targetbudgetmodal.jsx",
        "client/src/Components/budget/ViewBudgetModal.jsx",
        "client/src/services/budgetService.js"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Budget Management API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/budgets": {
            "get": {
              "summary": "Get all budgets for user",
              "security": [{"bearerAuth": []}]
            },
            "post": {
              "summary": "Create a new budget",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "category": {"type": "string"},
                        "amount": {"type": "number"},
                        "period": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/budgets/{id}": {
            "put": {
              "summary": "Update budget",
              "security": [{"bearerAuth": []}]
            },
            "delete": {
              "summary": "Delete budget",
              "security": [{"bearerAuth": []}]
            }
          },
          "/api/budgets/summary": {
            "get": {
              "summary": "Get budget summary",
              "security": [{"bearerAuth": []}]
            }
          },
          "/api/budgets/total": {
            "get": {
              "summary": "Get total budget",
              "security": [{"bearerAuth": []}]
            },
            "post": {
              "summary": "Set total budget",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "amount": {"type": "number"}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Annual Goals Management",
      "description": "Annual financial goals tracking and management system",
      "files": [
        "server/routes/annualGoalRoutes.js",
        "server/model/annualGoal.js",
        "server/controller/annualGoalController.js",
        "server/services/annualGoalService.js",
        "client/src/Components/budget/annualgoals.jsx",
        "client/src/Components/budget/savingsgoals.jsx",
        "client/src/Components/goals/AddFundsModal.jsx",
        "client/src/Components/goals/AnnualGoalModal.jsx",
        "client/src/services/annualGoalService.js"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Annual Goals API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/annual-goals": {
            "get": {
              "summary": "Get all annual goals",
              "security": [{"bearerAuth": []}]
            },
            "post": {
              "summary": "Create annual goal",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "title": {"type": "string"},
                        "targetAmount": {"type": "number"},
                        "currentAmount": {"type": "number"},
                        "deadline": {"type": "string", "format": "date"}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Dashboard & Analytics",
      "description": "Comprehensive dashboard with charts, reports, and financial analytics",
      "files": [
        "client/src/Components/dashboard/overview.jsx",
        "client/src/Components/dashboard/overviewcard.jsx",
        "client/src/Components/dashboard/balancechart.jsx",
        "client/src/Components/reports/report.jsx",
        "client/src/Components/reports/expensechart.jsx",
        "client/src/Components/reports/incomeexpensechart.jsx",
        "client/src/Components/reports/categorydistributionchart.jsx",
        "client/src/Pages/dashboard.jsx",
        "client/src/Pages/reports.jsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Dashboard Analytics",
          "version": "1.0.0"
        },
        "paths": {
          "/api/dashboard/overview": {
            "get": {
              "summary": "Get dashboard overview data",
              "security": [{"bearerAuth": []}]
            }
          },
          "/api/reports/expense-analysis": {
            "get": {
              "summary": "Get expense analysis report",
              "security": [{"bearerAuth": []}]
            }
          }
        }
      }
    },
    {
      "name": "User Profile Management",
      "description": "User profile management with personal information, account settings, and activity logs",
      "files": [
        "client/src/Components/profile/profile.jsx",
        "client/src/Components/profile/profileheader.jsx",
        "client/src/Components/profile/Personalinfo.jsx",
        "client/src/Components/profile/Accountinfo.jsx",
        "client/src/Components/profile/Updatepassword.jsx",
        "client/src/Components/profile/activitylog.jsx",
        "client/src/Pages/profilepage.jsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Profile Management",
          "version": "1.0.0"
        },
        "paths": {
          "/api/profile": {
            "get": {
              "summary": "Get user profile",
              "security": [{"bearerAuth": []}]
            },
            "put": {
              "summary": "Update user profile",
              "security": [{"bearerAuth": []}]
            }
          }
        }
      }
    },
    {
      "name": "Settings & Configuration",
      "description": "Application settings and configuration management",
      "files": [
        "client/src/Components/settings/setting.jsx",
        "client/src/Pages/settings.jsx",
        "client/src/Components/elements/ThemeToggle.jsx",
        "client/src/Components/elements/FloatingThemeToggle.jsx",
        "client/src/context/ThemeContext.jsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Settings API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/settings": {
            "get": {
              "summary": "Get user settings",
              "security": [{"bearerAuth": []}]
            },
            "put": {
              "summary": "Update user settings",
              "security": [{"bearerAuth": []}]
            }
          }
        }
      }
    }
  ]
}
